<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zqkh.healthy.context.appservice.impl.domain.repository.mappers.ProgramResultDmoMapper" >
  <resultMap id="BaseResultMap" type="com.zqkh.healthy.context.appservice.impl.domain.repository.mappers.dmo.ProgramResultDmo" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="familymember_id" property="familymemberId" jdbcType="VARCHAR" />
    <result column="program_id" property="programId" jdbcType="VARCHAR" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="insist_day" property="insistDay" jdbcType="INTEGER" />
    <result column="wander_num" property="wanderNum" jdbcType="INTEGER" />
    <result column="give_up_num" property="giveUpNum" jdbcType="INTEGER" />
    <result column="finish_num" property="finishNum" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="total" property="total" jdbcType="INTEGER" />
    <result column="transcend" property="transcend" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.zqkh.healthy.context.appservice.impl.domain.repository.mappers.dmo.ProgramResultDmo" extends="BaseResultMap" >
    <result column="program" property="program" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, familymember_id, program_id, start_time, end_time, insist_day, wander_num, give_up_num, 
    finish_num, create_time, total, transcend
  </sql>
  <sql id="Blob_Column_List" >
    program
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.zqkh.healthy.context.appservice.impl.domain.repository.mappers.dmo.ProgramResultDmoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_program_result
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zqkh.healthy.context.appservice.impl.domain.repository.mappers.dmo.ProgramResultDmoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_program_result
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_program_result
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_program_result
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.zqkh.healthy.context.appservice.impl.domain.repository.mappers.dmo.ProgramResultDmoExample" >
    delete from t_program_result
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zqkh.healthy.context.appservice.impl.domain.repository.mappers.dmo.ProgramResultDmo" >
    insert into t_program_result (id, familymember_id, program_id, 
      start_time, end_time, insist_day, 
      wander_num, give_up_num, finish_num, 
      create_time, total, transcend, 
      program)
    values (#{id,jdbcType=VARCHAR}, #{familymemberId,jdbcType=VARCHAR}, #{programId,jdbcType=VARCHAR}, 
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{insistDay,jdbcType=INTEGER}, 
      #{wanderNum,jdbcType=INTEGER}, #{giveUpNum,jdbcType=INTEGER}, #{finishNum,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{total,jdbcType=INTEGER}, #{transcend,jdbcType=INTEGER}, 
      #{program,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zqkh.healthy.context.appservice.impl.domain.repository.mappers.dmo.ProgramResultDmo" >
    insert into t_program_result
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="familymemberId != null" >
        familymember_id,
      </if>
      <if test="programId != null" >
        program_id,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="insistDay != null" >
        insist_day,
      </if>
      <if test="wanderNum != null" >
        wander_num,
      </if>
      <if test="giveUpNum != null" >
        give_up_num,
      </if>
      <if test="finishNum != null" >
        finish_num,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="total != null" >
        total,
      </if>
      <if test="transcend != null" >
        transcend,
      </if>
      <if test="program != null" >
        program,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="familymemberId != null" >
        #{familymemberId,jdbcType=VARCHAR},
      </if>
      <if test="programId != null" >
        #{programId,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="insistDay != null" >
        #{insistDay,jdbcType=INTEGER},
      </if>
      <if test="wanderNum != null" >
        #{wanderNum,jdbcType=INTEGER},
      </if>
      <if test="giveUpNum != null" >
        #{giveUpNum,jdbcType=INTEGER},
      </if>
      <if test="finishNum != null" >
        #{finishNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="total != null" >
        #{total,jdbcType=INTEGER},
      </if>
      <if test="transcend != null" >
        #{transcend,jdbcType=INTEGER},
      </if>
      <if test="program != null" >
        #{program,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zqkh.healthy.context.appservice.impl.domain.repository.mappers.dmo.ProgramResultDmoExample" resultType="java.lang.Integer" >
    select count(*) from t_program_result
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_program_result
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.familymemberId != null" >
        familymember_id = #{record.familymemberId,jdbcType=VARCHAR},
      </if>
      <if test="record.programId != null" >
        program_id = #{record.programId,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null" >
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null" >
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.insistDay != null" >
        insist_day = #{record.insistDay,jdbcType=INTEGER},
      </if>
      <if test="record.wanderNum != null" >
        wander_num = #{record.wanderNum,jdbcType=INTEGER},
      </if>
      <if test="record.giveUpNum != null" >
        give_up_num = #{record.giveUpNum,jdbcType=INTEGER},
      </if>
      <if test="record.finishNum != null" >
        finish_num = #{record.finishNum,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.total != null" >
        total = #{record.total,jdbcType=INTEGER},
      </if>
      <if test="record.transcend != null" >
        transcend = #{record.transcend,jdbcType=INTEGER},
      </if>
      <if test="record.program != null" >
        program = #{record.program,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update t_program_result
    set id = #{record.id,jdbcType=VARCHAR},
      familymember_id = #{record.familymemberId,jdbcType=VARCHAR},
      program_id = #{record.programId,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      insist_day = #{record.insistDay,jdbcType=INTEGER},
      wander_num = #{record.wanderNum,jdbcType=INTEGER},
      give_up_num = #{record.giveUpNum,jdbcType=INTEGER},
      finish_num = #{record.finishNum,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      total = #{record.total,jdbcType=INTEGER},
      transcend = #{record.transcend,jdbcType=INTEGER},
      program = #{record.program,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_program_result
    set id = #{record.id,jdbcType=VARCHAR},
      familymember_id = #{record.familymemberId,jdbcType=VARCHAR},
      program_id = #{record.programId,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      insist_day = #{record.insistDay,jdbcType=INTEGER},
      wander_num = #{record.wanderNum,jdbcType=INTEGER},
      give_up_num = #{record.giveUpNum,jdbcType=INTEGER},
      finish_num = #{record.finishNum,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      total = #{record.total,jdbcType=INTEGER},
      transcend = #{record.transcend,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zqkh.healthy.context.appservice.impl.domain.repository.mappers.dmo.ProgramResultDmo" >
    update t_program_result
    <set >
      <if test="familymemberId != null" >
        familymember_id = #{familymemberId,jdbcType=VARCHAR},
      </if>
      <if test="programId != null" >
        program_id = #{programId,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="insistDay != null" >
        insist_day = #{insistDay,jdbcType=INTEGER},
      </if>
      <if test="wanderNum != null" >
        wander_num = #{wanderNum,jdbcType=INTEGER},
      </if>
      <if test="giveUpNum != null" >
        give_up_num = #{giveUpNum,jdbcType=INTEGER},
      </if>
      <if test="finishNum != null" >
        finish_num = #{finishNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="total != null" >
        total = #{total,jdbcType=INTEGER},
      </if>
      <if test="transcend != null" >
        transcend = #{transcend,jdbcType=INTEGER},
      </if>
      <if test="program != null" >
        program = #{program,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zqkh.healthy.context.appservice.impl.domain.repository.mappers.dmo.ProgramResultDmo" >
    update t_program_result
    set familymember_id = #{familymemberId,jdbcType=VARCHAR},
      program_id = #{programId,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      insist_day = #{insistDay,jdbcType=INTEGER},
      wander_num = #{wanderNum,jdbcType=INTEGER},
      give_up_num = #{giveUpNum,jdbcType=INTEGER},
      finish_num = #{finishNum,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      total = #{total,jdbcType=INTEGER},
      transcend = #{transcend,jdbcType=INTEGER},
      program = #{program,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zqkh.healthy.context.appservice.impl.domain.repository.mappers.dmo.ProgramResultDmo" >
    update t_program_result
    set familymember_id = #{familymemberId,jdbcType=VARCHAR},
      program_id = #{programId,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      insist_day = #{insistDay,jdbcType=INTEGER},
      wander_num = #{wanderNum,jdbcType=INTEGER},
      give_up_num = #{giveUpNum,jdbcType=INTEGER},
      finish_num = #{finishNum,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      total = #{total,jdbcType=INTEGER},
      transcend = #{transcend,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>