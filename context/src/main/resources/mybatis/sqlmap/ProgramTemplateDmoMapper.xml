<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zqkh.healthy.context.appservice.impl.domain.repository.mappers.ProgramTemplateDmoMapper" >
  <resultMap id="BaseResultMap" type="com.zqkh.healthy.context.appservice.impl.domain.repository.mappers.dmo.ProgramTemplateDmo" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="enable" property="enable" jdbcType="BIT" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="edit_user" property="editUser" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.zqkh.healthy.context.appservice.impl.domain.repository.mappers.dmo.ProgramTemplateDmoWithBLOBs" extends="BaseResultMap" >
    <result column="sharing_img" property="sharingImg" jdbcType="LONGVARCHAR" />
    <result column="task" property="task" jdbcType="LONGVARCHAR" />
    <result column="remind" property="remind" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, enable, create_user, edit_user, create_time, update_time
  </sql>
  <sql id="Blob_Column_List" >
    sharing_img, task, remind
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.zqkh.healthy.context.appservice.impl.domain.repository.mappers.dmo.ProgramTemplateDmoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_program_template
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zqkh.healthy.context.appservice.impl.domain.repository.mappers.dmo.ProgramTemplateDmoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_program_template
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_program_template
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_program_template
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.zqkh.healthy.context.appservice.impl.domain.repository.mappers.dmo.ProgramTemplateDmoExample" >
    delete from t_program_template
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zqkh.healthy.context.appservice.impl.domain.repository.mappers.dmo.ProgramTemplateDmoWithBLOBs" >
    insert into t_program_template (id, name, enable, 
      create_user, edit_user, create_time, 
      update_time, sharing_img, task, 
      remind)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{enable,jdbcType=BIT}, 
      #{createUser,jdbcType=VARCHAR}, #{editUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{sharingImg,jdbcType=LONGVARCHAR}, #{task,jdbcType=LONGVARCHAR}, 
      #{remind,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zqkh.healthy.context.appservice.impl.domain.repository.mappers.dmo.ProgramTemplateDmoWithBLOBs" >
    insert into t_program_template
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="enable != null" >
        enable,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="editUser != null" >
        edit_user,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="sharingImg != null" >
        sharing_img,
      </if>
      <if test="task != null" >
        task,
      </if>
      <if test="remind != null" >
        remind,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="enable != null" >
        #{enable,jdbcType=BIT},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="editUser != null" >
        #{editUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sharingImg != null" >
        #{sharingImg,jdbcType=LONGVARCHAR},
      </if>
      <if test="task != null" >
        #{task,jdbcType=LONGVARCHAR},
      </if>
      <if test="remind != null" >
        #{remind,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zqkh.healthy.context.appservice.impl.domain.repository.mappers.dmo.ProgramTemplateDmoExample" resultType="java.lang.Integer" >
    select count(*) from t_program_template
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_program_template
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.enable != null" >
        enable = #{record.enable,jdbcType=BIT},
      </if>
      <if test="record.createUser != null" >
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.editUser != null" >
        edit_user = #{record.editUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sharingImg != null" >
        sharing_img = #{record.sharingImg,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.task != null" >
        task = #{record.task,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.remind != null" >
        remind = #{record.remind,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update t_program_template
    set id = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      enable = #{record.enable,jdbcType=BIT},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      edit_user = #{record.editUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      sharing_img = #{record.sharingImg,jdbcType=LONGVARCHAR},
      task = #{record.task,jdbcType=LONGVARCHAR},
      remind = #{record.remind,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_program_template
    set id = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      enable = #{record.enable,jdbcType=BIT},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      edit_user = #{record.editUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zqkh.healthy.context.appservice.impl.domain.repository.mappers.dmo.ProgramTemplateDmoWithBLOBs" >
    update t_program_template
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="enable != null" >
        enable = #{enable,jdbcType=BIT},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="editUser != null" >
        edit_user = #{editUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sharingImg != null" >
        sharing_img = #{sharingImg,jdbcType=LONGVARCHAR},
      </if>
      <if test="task != null" >
        task = #{task,jdbcType=LONGVARCHAR},
      </if>
      <if test="remind != null" >
        remind = #{remind,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zqkh.healthy.context.appservice.impl.domain.repository.mappers.dmo.ProgramTemplateDmoWithBLOBs" >
    update t_program_template
    set name = #{name,jdbcType=VARCHAR},
      enable = #{enable,jdbcType=BIT},
      create_user = #{createUser,jdbcType=VARCHAR},
      edit_user = #{editUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      sharing_img = #{sharingImg,jdbcType=LONGVARCHAR},
      task = #{task,jdbcType=LONGVARCHAR},
      remind = #{remind,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zqkh.healthy.context.appservice.impl.domain.repository.mappers.dmo.ProgramTemplateDmo" >
    update t_program_template
    set name = #{name,jdbcType=VARCHAR},
      enable = #{enable,jdbcType=BIT},
      create_user = #{createUser,jdbcType=VARCHAR},
      edit_user = #{editUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>