<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zqkh.healthy.context.appservice.impl.domain.repository.mappers.TestPaperDmoMapper" >
  <resultMap id="BaseResultMap" type="com.zqkh.healthy.context.appservice.impl.domain.repository.mappers.dmo.TestPaperDmo" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="cover_id" property="coverId" jdbcType="VARCHAR" />
    <result column="release" property="release" jdbcType="BIT" />
    <result column="create_id" property="createId" jdbcType="VARCHAR" />
    <result column="update_id" property="updateId" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.zqkh.healthy.context.appservice.impl.domain.repository.mappers.dmo.TestPaperDmoWithBLOBs" extends="BaseResultMap" >
    <result column="test_point" property="testPoint" jdbcType="LONGVARCHAR" />
    <result column="test_questions" property="testQuestions" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, `type`, title, remark, cover_id, `release`, create_id, update_id, create_time, update_time
  </sql>
  <sql id="Blob_Column_List" >
    test_point, test_questions
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.zqkh.healthy.context.appservice.impl.domain.repository.mappers.dmo.TestPaperDmoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_test_paper
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zqkh.healthy.context.appservice.impl.domain.repository.mappers.dmo.TestPaperDmoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_test_paper
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_test_paper
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_test_paper
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.zqkh.healthy.context.appservice.impl.domain.repository.mappers.dmo.TestPaperDmoExample" >
    delete from t_test_paper
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zqkh.healthy.context.appservice.impl.domain.repository.mappers.dmo.TestPaperDmoWithBLOBs" >
    insert into t_test_paper (id, `type`, title,
      remark, cover_id, `release`,
      create_id, update_id, create_time, 
      update_time, test_point, test_questions
      )
    values (#{id,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{coverId,jdbcType=VARCHAR}, #{release,jdbcType=BIT}, 
      #{createId,jdbcType=VARCHAR}, #{updateId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{testPoint,jdbcType=LONGVARCHAR}, #{testQuestions,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zqkh.healthy.context.appservice.impl.domain.repository.mappers.dmo.TestPaperDmoWithBLOBs" >
    insert into t_test_paper
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="type != null" >
        `type`,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="coverId != null" >
        cover_id,
      </if>
      <if test="release != null" >
        `release`,
      </if>
      <if test="createId != null" >
        create_id,
      </if>
      <if test="updateId != null" >
        update_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="testPoint != null" >
        test_point,
      </if>
      <if test="testQuestions != null" >
        test_questions,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="coverId != null" >
        #{coverId,jdbcType=VARCHAR},
      </if>
      <if test="release != null" >
        #{release,jdbcType=BIT},
      </if>
      <if test="createId != null" >
        #{createId,jdbcType=VARCHAR},
      </if>
      <if test="updateId != null" >
        #{updateId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="testPoint != null" >
        #{testPoint,jdbcType=LONGVARCHAR},
      </if>
      <if test="testQuestions != null" >
        #{testQuestions,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zqkh.healthy.context.appservice.impl.domain.repository.mappers.dmo.TestPaperDmoExample" resultType="java.lang.Integer" >
    select count(*) from t_test_paper
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_test_paper
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        `type` = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.coverId != null" >
        cover_id = #{record.coverId,jdbcType=VARCHAR},
      </if>
      <if test="record.release != null" >
        `release` = #{record.release,jdbcType=BIT},
      </if>
      <if test="record.createId != null" >
        create_id = #{record.createId,jdbcType=VARCHAR},
      </if>
      <if test="record.updateId != null" >
        update_id = #{record.updateId,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.testPoint != null" >
        test_point = #{record.testPoint,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.testQuestions != null" >
        test_questions = #{record.testQuestions,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update t_test_paper
    set id = #{record.id,jdbcType=VARCHAR},
      `type` = #{record.type,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      cover_id = #{record.coverId,jdbcType=VARCHAR},
      `release` = #{record.release,jdbcType=BIT},
      create_id = #{record.createId,jdbcType=VARCHAR},
      update_id = #{record.updateId,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      test_point = #{record.testPoint,jdbcType=LONGVARCHAR},
      test_questions = #{record.testQuestions,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_test_paper
    set id = #{record.id,jdbcType=VARCHAR},
      `type` = #{record.type,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      cover_id = #{record.coverId,jdbcType=VARCHAR},
      `release` = #{record.release,jdbcType=BIT},
      create_id = #{record.createId,jdbcType=VARCHAR},
      update_id = #{record.updateId,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zqkh.healthy.context.appservice.impl.domain.repository.mappers.dmo.TestPaperDmoWithBLOBs" >
    update t_test_paper
    <set >
      <if test="type != null" >
        `type` = #{type,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="coverId != null" >
        cover_id = #{coverId,jdbcType=VARCHAR},
      </if>
      <if test="release != null" >
        `release` = #{release,jdbcType=BIT},
      </if>
      <if test="createId != null" >
        create_id = #{createId,jdbcType=VARCHAR},
      </if>
      <if test="updateId != null" >
        update_id = #{updateId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="testPoint != null" >
        test_point = #{testPoint,jdbcType=LONGVARCHAR},
      </if>
      <if test="testQuestions != null" >
        test_questions = #{testQuestions,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zqkh.healthy.context.appservice.impl.domain.repository.mappers.dmo.TestPaperDmoWithBLOBs" >
    update t_test_paper
    set `type` = #{type,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      cover_id = #{coverId,jdbcType=VARCHAR},
      `release` = #{release,jdbcType=BIT},
      create_id = #{createId,jdbcType=VARCHAR},
      update_id = #{updateId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      test_point = #{testPoint,jdbcType=LONGVARCHAR},
      test_questions = #{testQuestions,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zqkh.healthy.context.appservice.impl.domain.repository.mappers.dmo.TestPaperDmo" >
    update t_test_paper
    set `type` = #{type,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      cover_id = #{coverId,jdbcType=VARCHAR},
      `release` = #{release,jdbcType=BIT},
      create_id = #{createId,jdbcType=VARCHAR},
      update_id = #{updateId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>